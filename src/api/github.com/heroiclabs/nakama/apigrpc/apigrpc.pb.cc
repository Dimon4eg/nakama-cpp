// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama/apigrpc/apigrpc.proto

#ifdef BUILD_GRPC_CLIENT

#include "github.com/heroiclabs/nakama/apigrpc/apigrpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace nakama {
namespace api {
}  // namespace api
}  // namespace nakama
namespace protobuf_github_2ecom_2fheroiclabs_2fnakama_2fapigrpc_2fapigrpc_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "github.com/heroiclabs/nakama/apigrpc/apigrpc.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2github.com/heroiclabs/nakama/apigrpc/a"
      "pigrpc.proto\022\nnakama.api\032\034google/api/ann"
      "otations.proto\032\033google/protobuf/empty.pr"
      "oto\032,protoc-gen-swagger/options/annotati"
      "ons.proto\0321github.com/heroiclabs/nakama-"
      "common/api/api.proto2\3066\n\006Nakama\022W\n\nAddFr"
      "iends\022\035.nakama.api.AddFriendsRequest\032\026.g"
      "oogle.protobuf.Empty\"\022\202\323\344\223\002\014\"\n/v2/friend"
      "\022k\n\rAddGroupUsers\022 .nakama.api.AddGroupU"
      "sersRequest\032\026.google.protobuf.Empty\" \202\323\344"
      "\223\002\032\"\030/v2/group/{group_id}/add\022\226\001\n\022Authen"
      "ticateCustom\022%.nakama.api.AuthenticateCu"
      "stomRequest\032\023.nakama.api.Session\"D\202\323\344\223\002*"
      "\"\037/v2/account/authenticate/custom:\007accou"
      "nt\222A\021b\017\n\r\n\tBasicAuth\022\000\022\226\001\n\022AuthenticateD"
      "evice\022%.nakama.api.AuthenticateDeviceReq"
      "uest\032\023.nakama.api.Session\"D\202\323\344\223\002*\"\037/v2/a"
      "ccount/authenticate/device:\007account\222A\021b\017"
      "\n\r\n\tBasicAuth\022\000\022\223\001\n\021AuthenticateEmail\022$."
      "nakama.api.AuthenticateEmailRequest\032\023.na"
      "kama.api.Session\"C\202\323\344\223\002)\"\036/v2/account/au"
      "thenticate/email:\007account\222A\021b\017\n\r\n\tBasicA"
      "uth\022\000\022\234\001\n\024AuthenticateFacebook\022\'.nakama."
      "api.AuthenticateFacebookRequest\032\023.nakama"
      ".api.Session\"F\202\323\344\223\002,\"!/v2/account/authen"
      "ticate/facebook:\007account\222A\021b\017\n\r\n\tBasicAu"
      "th\022\000\022\242\001\n\026AuthenticateGameCenter\022).nakama"
      ".api.AuthenticateGameCenterRequest\032\023.nak"
      "ama.api.Session\"H\202\323\344\223\002.\"#/v2/account/aut"
      "henticate/gamecenter:\007account\222A\021b\017\n\r\n\tBa"
      "sicAuth\022\000\022\226\001\n\022AuthenticateGoogle\022%.nakam"
      "a.api.AuthenticateGoogleRequest\032\023.nakama"
      ".api.Session\"D\202\323\344\223\002*\"\037/v2/account/authen"
      "ticate/google:\007account\222A\021b\017\n\r\n\tBasicAuth"
      "\022\000\022\223\001\n\021AuthenticateSteam\022$.nakama.api.Au"
      "thenticateSteamRequest\032\023.nakama.api.Sess"
      "ion\"C\202\323\344\223\002)\"\036/v2/account/authenticate/st"
      "eam:\007account\222A\021b\017\n\r\n\tBasicAuth\022\000\022a\n\014Bloc"
      "kFriends\022\037.nakama.api.BlockFriendsReques"
      "t\032\026.google.protobuf.Empty\"\030\202\323\344\223\002\022\"\020/v2/f"
      "riend/block\022V\n\013CreateGroup\022\036.nakama.api."
      "CreateGroupRequest\032\021.nakama.api.Group\"\024\202"
      "\323\344\223\002\016\"\t/v2/group:\001*\022]\n\rDeleteFriends\022 .n"
      "akama.api.DeleteFriendsRequest\032\026.google."
      "protobuf.Empty\"\022\202\323\344\223\002\014*\n/v2/friend\022c\n\013De"
      "leteGroup\022\036.nakama.api.DeleteGroupReques"
      "t\032\026.google.protobuf.Empty\"\034\202\323\344\223\002\026*\024/v2/g"
      "roup/{group_id}\022\207\001\n\027DeleteLeaderboardRec"
      "ord\022*.nakama.api.DeleteLeaderboardRecord"
      "Request\032\026.google.protobuf.Empty\"(\202\323\344\223\002\"*"
      " /v2/leaderboard/{leaderboard_id}\022o\n\023Del"
      "eteNotifications\022&.nakama.api.DeleteNoti"
      "ficationsRequest\032\026.google.protobuf.Empty"
      "\"\030\202\323\344\223\002\022*\020/v2/notification\022v\n\024DeleteStor"
      "ageObjects\022\'.nakama.api.DeleteStorageObj"
      "ectsRequest\032\026.google.protobuf.Empty\"\035\202\323\344"
      "\223\002\027\032\022/v2/storage/delete:\001*\022N\n\nGetAccount"
      "\022\026.google.protobuf.Empty\032\023.nakama.api.Ac"
      "count\"\023\202\323\344\223\002\r\022\013/v2/account\022L\n\010GetUsers\022\033"
      ".nakama.api.GetUsersRequest\032\021.nakama.api"
      ".Users\"\020\202\323\344\223\002\n\022\010/v2/user\022S\n\013Healthcheck\022"
      "\026.google.protobuf.Empty\032\026.google.protobu"
      "f.Empty\"\024\202\323\344\223\002\016\022\014/healthcheck\022\177\n\025ImportF"
      "acebookFriends\022(.nakama.api.ImportFacebo"
      "okFriendsRequest\032\026.google.protobuf.Empty"
      "\"$\202\323\344\223\002\036\"\023/v2/friend/facebook:\007account\022d"
      "\n\tJoinGroup\022\034.nakama.api.JoinGroupReques"
      "t\032\026.google.protobuf.Empty\"!\202\323\344\223\002\033\"\031/v2/g"
      "roup/{group_id}/join\022x\n\016JoinTournament\022!"
      ".nakama.api.JoinTournamentRequest\032\026.goog"
      "le.protobuf.Empty\"+\202\323\344\223\002%\"#/v2/tournamen"
      "t/{tournament_id}/join\022n\n\016KickGroupUsers"
      "\022!.nakama.api.KickGroupUsersRequest\032\026.go"
      "ogle.protobuf.Empty\"!\202\323\344\223\002\033\"\031/v2/group/{"
      "group_id}/kick\022g\n\nLeaveGroup\022\035.nakama.ap"
      "i.LeaveGroupRequest\032\026.google.protobuf.Em"
      "pty\"\"\202\323\344\223\002\034\"\032/v2/group/{group_id}/leave\022"
      "c\n\nLinkCustom\022\031.nakama.api.AccountCustom"
      "\032\026.google.protobuf.Empty\"\"\202\323\344\223\002\034\"\027/v2/ac"
      "count/link/custom:\001*\022c\n\nLinkDevice\022\031.nak"
      "ama.api.AccountDevice\032\026.google.protobuf."
      "Empty\"\"\202\323\344\223\002\034\"\027/v2/account/link/device:\001"
      "*\022`\n\tLinkEmail\022\030.nakama.api.AccountEmail"
      "\032\026.google.protobuf.Empty\"!\202\323\344\223\002\033\"\026/v2/ac"
      "count/link/email:\001*\022s\n\014LinkFacebook\022\037.na"
      "kama.api.LinkFacebookRequest\032\026.google.pr"
      "otobuf.Empty\"*\202\323\344\223\002$\"\031/v2/account/link/f"
      "acebook:\007account\022o\n\016LinkGameCenter\022\035.nak"
      "ama.api.AccountGameCenter\032\026.google.proto"
      "buf.Empty\"&\202\323\344\223\002 \"\033/v2/account/link/game"
      "center:\001*\022c\n\nLinkGoogle\022\031.nakama.api.Acc"
      "ountGoogle\032\026.google.protobuf.Empty\"\"\202\323\344\223"
      "\002\034\"\027/v2/account/link/google:\001*\022`\n\tLinkSt"
      "eam\022\030.nakama.api.AccountSteam\032\026.google.p"
      "rotobuf.Empty\"!\202\323\344\223\002\033\"\026/v2/account/link/"
      "steam:\001*\022\177\n\023ListChannelMessages\022&.nakama"
      ".api.ListChannelMessagesRequest\032\036.nakama"
      ".api.ChannelMessageList\" \202\323\344\223\002\032\022\030/v2/cha"
      "nnel/{channel_id}\022Y\n\013ListFriends\022\036.nakam"
      "a.api.ListFriendsRequest\032\026.nakama.api.Fr"
      "iendList\"\022\202\323\344\223\002\014\022\n/v2/friend\022U\n\nListGrou"
      "ps\022\035.nakama.api.ListGroupsRequest\032\025.naka"
      "ma.api.GroupList\"\021\202\323\344\223\002\013\022\t/v2/group\022q\n\016L"
      "istGroupUsers\022!.nakama.api.ListGroupUser"
      "sRequest\032\031.nakama.api.GroupUserList\"!\202\323\344"
      "\223\002\033\022\031/v2/group/{group_id}/user\022\220\001\n\026ListL"
      "eaderboardRecords\022).nakama.api.ListLeade"
      "rboardRecordsRequest\032!.nakama.api.Leader"
      "boardRecordList\"(\202\323\344\223\002\"\022 /v2/leaderboard"
      "/{leaderboard_id}\022\267\001\n!ListLeaderboardRec"
      "ordsAroundOwner\0224.nakama.api.ListLeaderb"
      "oardRecordsAroundOwnerRequest\032!.nakama.a"
      "pi.LeaderboardRecordList\"9\202\323\344\223\0023\0221/v2/le"
      "aderboard/{leaderboard_id}/owner/{owner_"
      "id}\022W\n\013ListMatches\022\036.nakama.api.ListMatc"
      "hesRequest\032\025.nakama.api.MatchList\"\021\202\323\344\223\002"
      "\013\022\t/v2/match\022q\n\021ListNotifications\022$.naka"
      "ma.api.ListNotificationsRequest\032\034.nakama"
      ".api.NotificationList\"\030\202\323\344\223\002\022\022\020/v2/notif"
      "ication\022\242\001\n\022ListStorageObjects\022%.nakama."
      "api.ListStorageObjectsRequest\032\035.nakama.a"
      "pi.StorageObjectList\"F\202\323\344\223\002@\022\030/v2/storag"
      "e/{collection}Z$\022\"/v2/storage/{collectio"
      "n}/{user_id}\022i\n\017ListTournaments\022\".nakama"
      ".api.ListTournamentsRequest\032\032.nakama.api"
      ".TournamentList\"\026\202\323\344\223\002\020\022\016/v2/tournament\022"
      "\213\001\n\025ListTournamentRecords\022(.nakama.api.L"
      "istTournamentRecordsRequest\032 .nakama.api"
      ".TournamentRecordList\"&\202\323\344\223\002 \022\036/v2/tourn"
      "ament/{tournament_id}\022\262\001\n ListTournament"
      "RecordsAroundOwner\0223.nakama.api.ListTour"
      "namentRecordsAroundOwnerRequest\032 .nakama"
      ".api.TournamentRecordList\"7\202\323\344\223\0021\022//v2/t"
      "ournament/{tournament_id}/owner/{owner_i"
      "d}\022p\n\016ListUserGroups\022!.nakama.api.ListUs"
      "erGroupsRequest\032\031.nakama.api.UserGroupLi"
      "st\" \202\323\344\223\002\032\022\030/v2/user/{user_id}/group\022w\n\021"
      "PromoteGroupUsers\022$.nakama.api.PromoteGr"
      "oupUsersRequest\032\026.google.protobuf.Empty\""
      "$\202\323\344\223\002\036\"\034/v2/group/{group_id}/promote\022o\n"
      "\022ReadStorageObjects\022%.nakama.api.ReadSto"
      "rageObjectsRequest\032\032.nakama.api.StorageO"
      "bjects\"\026\202\323\344\223\002\020\"\013/v2/storage:\001*\022\177\n\007RpcFun"
      "c\022\017.nakama.api.Rpc\032\017.nakama.api.Rpc\"R\202\323\344"
      "\223\002\'\"\014/v2/rpc/{id}:\007payloadZ\016\022\014/v2/rpc/{i"
      "d}\222A\"b \n\017\n\013HttpKeyAuth\022\000\n\r\n\tBearerJwt\022\000\022"
      "g\n\014UnlinkCustom\022\031.nakama.api.AccountCust"
      "om\032\026.google.protobuf.Empty\"$\202\323\344\223\002\036\"\031/v2/"
      "account/unlink/custom:\001*\022g\n\014UnlinkDevice"
      "\022\031.nakama.api.AccountDevice\032\026.google.pro"
      "tobuf.Empty\"$\202\323\344\223\002\036\"\031/v2/account/unlink/"
      "device:\001*\022d\n\013UnlinkEmail\022\030.nakama.api.Ac"
      "countEmail\032\026.google.protobuf.Empty\"#\202\323\344\223"
      "\002\035\"\030/v2/account/unlink/email:\001*\022m\n\016Unlin"
      "kFacebook\022\033.nakama.api.AccountFacebook\032\026"
      ".google.protobuf.Empty\"&\202\323\344\223\002 \"\033/v2/acco"
      "unt/unlink/facebook:\001*\022s\n\020UnlinkGameCent"
      "er\022\035.nakama.api.AccountGameCenter\032\026.goog"
      "le.protobuf.Empty\"(\202\323\344\223\002\"\"\035/v2/account/u"
      "nlink/gamecenter:\001*\022g\n\014UnlinkGoogle\022\031.na"
      "kama.api.AccountGoogle\032\026.google.protobuf"
      ".Empty\"$\202\323\344\223\002\036\"\031/v2/account/unlink/googl"
      "e:\001*\022d\n\013UnlinkSteam\022\030.nakama.api.Account"
      "Steam\032\026.google.protobuf.Empty\"#\202\323\344\223\002\035\"\030/"
      "v2/account/unlink/steam:\001*\022a\n\rUpdateAcco"
      "unt\022 .nakama.api.UpdateAccountRequest\032\026."
      "google.protobuf.Empty\"\026\202\323\344\223\002\020\032\013/v2/accou"
      "nt:\001*\022f\n\013UpdateGroup\022\036.nakama.api.Update"
      "GroupRequest\032\026.google.protobuf.Empty\"\037\202\323"
      "\344\223\002\031\032\024/v2/group/{group_id}:\001*\022\224\001\n\026WriteL"
      "eaderboardRecord\022).nakama.api.WriteLeade"
      "rboardRecordRequest\032\035.nakama.api.Leaderb"
      "oardRecord\"0\202\323\344\223\002*\" /v2/leaderboard/{lea"
      "derboard_id}:\006record\022t\n\023WriteStorageObje"
      "cts\022&.nakama.api.WriteStorageObjectsRequ"
      "est\032\035.nakama.api.StorageObjectAcks\"\026\202\323\344\223"
      "\002\020\032\013/v2/storage:\001*\022\220\001\n\025WriteTournamentRe"
      "cord\022(.nakama.api.WriteTournamentRecordR"
      "equest\032\035.nakama.api.LeaderboardRecord\".\202"
      "\323\344\223\002(\032\036/v2/tournament/{tournament_id}:\006r"
      "ecordB\205\003\n\031com.heroiclabs.nakama.apiB\rNak"
      "amaApiGrpcP\001Z\007apigrpc\242\002\004NKPB\252\002\006Nakama\222A\274"
      "\002\022u\n\rNakama API v2\"_\n!The Nakama Authors"
      " & Contributors\022$https://github.com/hero"
      "iclabs/nakama\032\024hello@heroiclabs.com2\0032.0"
      "\032\016127.0.0.1:7350*\001\0012\020application/json:\020a"
      "pplication/jsonZ\?\n\017\n\tBasicAuth\022\002\010\001\n\r\n\tBe"
      "arerJwt\022\000\n\035\n\013HttpKeyAuth\022\016\010\002\032\010http_key \002"
      "b\017\n\r\n\tBearerJwt\022\000r:\n\033Nakama server docum"
      "entation\022\033https://heroiclabs.com/docsb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7605);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "github.com/heroiclabs/nakama/apigrpc/apigrpc.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fheroiclabs_2fnakama_2dcommon_2fapi_2fapi_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_github_2ecom_2fheroiclabs_2fnakama_2fapigrpc_2fapigrpc_2eproto
namespace nakama {
namespace api {

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace nakama
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif // #ifdef BUILD_GRPC_CLIENT
